

import java.util.*;


class Task {
    private String name, description;
    private int priority;

    public Task (String name, String description, int priority) {
        this.name = name;
        this.description = description;
        this.priority = priority;
    }

    public String getName() {
        return name;
    }

    public String getDescription() {
        return description;
    }

    public int getPriority() {
        return priority;
    }
}

class TaskList {
    private List<Task> tasks = new ArrayList<>();

    public void addNew(Task task) {

        tasks.add(task);
    }
    public void remove(int index) {
        tasks.remove(index);
    }

    public void update(int index, Task updateTask) {
        tasks.set(index, updateTask);
    }
    public void displayElement() {
        for (int i = 0; i < tasks.size(); i++){
            Task aTask = tasks.get(i);
            System.out.println(i + ". " + aTask.getName());
        }
    }

    public void displayByPriority(int priority) {
        for (int i = 0; i < tasks.size(); i++){
            Task aTask = tasks.get(i);
            if (aTask.getPriority() == priority) {
                System.out.println(i + ". " + aTask.getName());
            }
        }
    }

}

class UserInput {
    Scanner scan = new Scanner(System.in);

    public int promptInt(String message) {
        System.out.println(message);
        String userInput = scan.nextLine();

        int userInt = -1;
        while  (userInt < 0 || userInt > 5) {

            try {
                userInt = Integer.parseInt(userInput);
            } catch (NumberFormatException e) {
                System.out.println(userInput + " is not a valid choice. " + message);
                userInput = scan.nextLine();
            }
        }

        return userInt;
    }

    public String promptString(String message) {
        System.out.println(message);
        return scan.nextLine();
    }

}


public class Main {
    public static void main(String[] args) {

        UserInput userInput = new UserInput();

        TaskList taskList = new TaskList();

        int answer = 1;
        while (answer != 0) {
            System.out.println("Please choose an option:\n" +
                    "(1) Add a task.\n" +
                    "(2) Remove a task.\n" +
                    "(3) Update a task.\n" +
                    "(4) List all tasks.\n" +
                    "(5) List all tasks of a certain priority.\n" +
                    "(0) Exit.\n");

            int option = userInput.promptInt("Choose an option: ");

            if (option == 1) {
                String name = userInput.promptString("Enter the new task's name.");
                String description = userInput.promptString("Enter the new task's description.");
                int priority = userInput.promptInt("Enter the new task's priority, 0 (low) to 5 (high).");
                Task A = new Task(name, description, priority);
                taskList.addNew(A);
            }

            else if (option == 2) {
                int removeItem = userInput.promptInt("Enter the index of the item to remove.");
                taskList.remove(removeItem);
            }

            else if (option == 3) {
                int index = userInput.promptInt("Enter the index of the task to update.");
                String newTask = userInput.promptString("Enter the new task's name.");
                String newDescription = userInput.promptString("Enter the new task's description.");
                int newPriority = userInput.promptInt("Enter the new task's priority, 0 (low) to 5 (high).");
                Task B = new Task(newTask, newDescription, newPriority);
                taskList.update(index, B);
            }

            else if (option == 4) {
                taskList.displayElement();
            }

            else if (option == 5){
                int priority = userInput.promptInt("Enter a priority, 0 (low) to 5 (high).");
                taskList.displayByPriority(priority);
            }
            else {
                answer = 0;
                System.exit(0);

            }
        }
    }
}
